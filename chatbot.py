import openai
import streamlit as st
from streamlit_chat import message
import time

# Make sure you have set up your API key in Streamlit secrets
openai.api_key = st.secrets["api_secret"]

cooldown_period = 2  # Adjust this as needed
# Rate limiting decorator
def rate_limit(fn):
    last_call = 0

    def wrapper(*args, **kwargs):
        nonlocal last_call
        elapsed = time.time() - last_call
        if elapsed < cooldown_period:
            time.sleep(cooldown_period - elapsed)
        result = fn(*args, **kwargs)
        last_call = time.time()
        return result

    return wrapper

def generate_response(prompt):
    try:
        completions = openai.Completion.create(
            engine="text-davinci-002",
            prompt=prompt,
            max_tokens=50, # Set a lower value based on your needs
            n=1,
            stop=None,
            temperature=0.2, # Lower temperature for more deterministic output
        )

        message_text = completions.choices[0].text
        return message_text
    except Exception as e:
        st.error(f"An error occurred: {str(e)}")
        return None

st.title("Welcome to ChatBot Generated by OPENAI")

if 'generated' not in st.session_state:
    st.session_state['generated'] = []

if 'past' not in st.session_state:
    st.session_state['past'] = []

def get_text():
    input_text = st.text_input("You: ", "Hello, how can I help you today?", key="input")
    return input_text 

user_input = get_text()

if user_input:
    output = generate_response(user_input)
    if output:
        st.session_state.past.append(user_input)
        st.session_state.generated.append(output)

if st.session_state['generated']:
    for i in range(len(st.session_state['generated'])-1, -1, -1):
        message(st.session_state["generated"][i], key=str(i))
        message(st.session_state['past'][i], is_user=True, key=str(i) + '_user')
        
   